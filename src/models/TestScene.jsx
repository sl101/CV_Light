/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: borsh_and (https://sketchfab.com/borsh_and)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stylized-forest-scene-may-holiday-c4baeda6e099461ab507b48245609eae
Title: Stylized forest - Scene "May holiday"
*/


import { a } from "@react-spring/three";
import { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";

import islandScene from "../assets/3d/island_2.glb";

export function TestScene({
	isRotating,
	setIsRotating,
	setCurrentStage,
	currentFocusPoint,
	...props
}) {
	const islandRef = useRef();
	// Get access to the Three.js renderer and viewport
	const { gl, viewport } = useThree();
	const { nodes, materials } = useGLTF(islandScene);

	// Use a ref for the last mouse x position
	const lastX = useRef(0);
	// Use a ref for rotation speed
	const rotationSpeed = useRef(0);
	// Define a damping factor to control rotation damping
	const dampingFactor = 0.95;

	// Handle pointer (mouse or touch) down event
	const handlePointerDown = (event) => {
		event.stopPropagation();
		event.preventDefault();
		setIsRotating(true);

		// Calculate the clientX based on whether it's a touch event or a mouse event
		const clientX = event.touches ? event.touches[0].clientX : event.clientX;

		// Store the current clientX position for reference
		lastX.current = clientX;
	};

	// Handle pointer (mouse or touch) up event
	const handlePointerUp = (event) => {
		event.stopPropagation();
		event.preventDefault();
		setIsRotating(false);
	};

	// Handle pointer (mouse or touch) move event
	const handlePointerMove = (event) => {
		event.stopPropagation();
		event.preventDefault();
		if (isRotating) {
			// If rotation is enabled, calculate the change in clientX position
			const clientX = event.touches ? event.touches[0].clientX : event.clientX;

			// calculate the change in the horizontal position of the mouse cursor or touch input,
			// relative to the viewport's width
			const delta = (clientX - lastX.current) / viewport.width;

			// Update the island's rotation based on the mouse/touch movement
			islandRef.current.rotation.y += delta * 0.01 * Math.PI;

			// Update the reference for the last clientX position
			lastX.current = clientX;

			// Update the rotation speed
			rotationSpeed.current = delta * 0.01 * Math.PI;
		}
	};

	// Handle keydown events
	const handleKeyDown = (event) => {
		if (event.key === "ArrowLeft") {
			if (!isRotating) setIsRotating(true);

			islandRef.current.rotation.y += 0.005 * Math.PI;
			rotationSpeed.current = 0.007;
		} else if (event.key === "ArrowRight") {
			if (!isRotating) setIsRotating(true);

			islandRef.current.rotation.y -= 0.005 * Math.PI;
			rotationSpeed.current = -0.007;
		}
	};

	// Handle keyup events
	const handleKeyUp = (event) => {
		if (event.key === "ArrowLeft" || event.key === "ArrowRight") {
			setIsRotating(false);
		}
	};

	// Touch events for mobile devices
	const handleTouchStart = (e) => {
		e.stopPropagation();
		e.preventDefault();
		setIsRotating(true);

		const clientX = e.touches ? e.touches[0].clientX : e.clientX;
		lastX.current = clientX;
	}

	const handleTouchEnd = (e) => {
		e.stopPropagation();
		e.preventDefault();
		setIsRotating(false);
	}

	const handleTouchMove = (e) => {
		e.stopPropagation();
		e.preventDefault();

		if (isRotating) {
			const clientX = e.touches ? e.touches[0].clientX : e.clientX;
			const delta = (clientX - lastX.current) / viewport.width;

			islandRef.current.rotation.y += delta * 0.01 * Math.PI;
			lastX.current = clientX;
			rotationSpeed.current = delta * 0.01 * Math.PI;
		}
	}

	useEffect(() => {
		// Add event listeners for pointer and keyboard events
		const canvas = gl.domElement;
		canvas.addEventListener("pointerdown", handlePointerDown);
		canvas.addEventListener("pointerup", handlePointerUp);
		canvas.addEventListener("pointermove", handlePointerMove);
		window.addEventListener("keydown", handleKeyDown);
		window.addEventListener("keyup", handleKeyUp);
		canvas.addEventListener("touchstart", handleTouchStart);
		canvas.addEventListener("touchend", handleTouchEnd);
		canvas.addEventListener("touchmove", handleTouchMove);

		// Remove event listeners when component unmounts
		return () => {
			canvas.removeEventListener("pointerdown", handlePointerDown);
			canvas.removeEventListener("pointerup", handlePointerUp);
			canvas.removeEventListener("pointermove", handlePointerMove);
			window.removeEventListener("keydown", handleKeyDown);
			window.removeEventListener("keyup", handleKeyUp);
			canvas.removeEventListener("touchstart", handleTouchStart);
			canvas.removeEventListener("touchend", handleTouchEnd);
			canvas.removeEventListener("touchmove", handleTouchMove);
		};
	}, [gl, handlePointerDown, handlePointerUp, handlePointerMove]);

	// This function is called on each frame update
	useFrame(() => {
		// If not rotating, apply damping to slow down the rotation (smoothly)
		if (!isRotating) {
			// Apply damping factor
			rotationSpeed.current *= dampingFactor;

			// Stop rotation when speed is very small
			if (Math.abs(rotationSpeed.current) < 0.001) {
				rotationSpeed.current = 0;
			}

			islandRef.current.rotation.y += rotationSpeed.current;
		} else {
			// When rotating, determine the current stage based on island's orientation
			const rotation = islandRef.current.rotation.y;

			/**
			 * Normalize the rotation value to ensure it stays within the range [0, 2 * Math.PI].
			 * The goal is to ensure that the rotation value remains within a specific range to
			 * prevent potential issues with very large or negative rotation values.
			 *  Here's a step-by-step explanation of what this code does:
			 *  1. rotation % (2 * Math.PI) calculates the remainder of the rotation value when divided
			 *     by 2 * Math.PI. This essentially wraps the rotation value around once it reaches a
			 *     full circle (360 degrees) so that it stays within the range of 0 to 2 * Math.PI.
			 *  2. (rotation % (2 * Math.PI)) + 2 * Math.PI adds 2 * Math.PI to the result from step 1.
			 *     This is done to ensure that the value remains positive and within the range of
			 *     0 to 2 * Math.PI even if it was negative after the modulo operation in step 1.
			 *  3. Finally, ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI) applies another
			 *     modulo operation to the value obtained in step 2. This step guarantees that the value
			 *     always stays within the range of 0 to 2 * Math.PI, which is equivalent to a full
			 *     circle in radians.
			 */
			const normalizedRotation =
				((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

			// Set the current stage based on the island's orientation
			switch (true) {
				case normalizedRotation >= 5.45 && normalizedRotation <= 5.85:
					setCurrentStage(4);
					break;
				case normalizedRotation >= 0.85 && normalizedRotation <= 1.3:
					setCurrentStage(3);
					break;
				case normalizedRotation >= 2.4 && normalizedRotation <= 2.6:
					setCurrentStage(2);
					break;
				case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
					setCurrentStage(1);
					break;
				default:
					setCurrentStage(null);
			}
		}
	});

	return (
		<a.group ref={islandRef} {...props}>
			<group rotation={[-Math.PI / 2, 0, 0]} scale={0.872}>
				<group rotation={[Math.PI / 2, 0, 0]} scale={0.05}>
					<group
						position={[20.578, -24.335, -510.979]}
						rotation={[-1.659, -0.081, -0.383]}
						scale={87.462}>
						<mesh


							geometry={nodes.Circle_Birch_tree_0.geometry}
							material={materials.Birch_tree}
						/>
						<mesh


							geometry={nodes.Circle_foliage_base_color_0.geometry}
							material={materials.foliage_base_color}
						/>
					</group>
					<group
						position={[192.346, 1.099, -204.752]}
						rotation={[-1.606, 0.019, -1.087]}
						scale={[96.626, 96.627, 96.626]}>
						<mesh


							geometry={nodes.Circle001_Fir_0.geometry}
							material={materials.material}
						/>
						<mesh


							geometry={nodes.Circle001_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[45.116, -7.285, -375.498]}
						rotation={[-1.771, -0.041, -1.279]}
						scale={96.626}>
						<mesh


							geometry={nodes.Circle002_Wood_0.geometry}
							material={materials.Wood}
						/>
						<mesh


							geometry={nodes.Circle002_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[456.494, 89.101, -128.499]}
						rotation={[1.65, -0.167, 1.018]}
						scale={96.626}>
						<mesh


							geometry={nodes.Circle004_Wood_0.geometry}
							material={materials.Wood}
						/>
						<mesh


							geometry={nodes.Circle004_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-271.381, 16.013, 156.027]}
						rotation={[-0.362, 1.255, 0.435]}
						scale={122.394}>
						<mesh


							geometry={nodes.Circle003_Wood_0.geometry}
							material={materials.Wood}
						/>
						<mesh


							geometry={nodes.Circle003_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[378.468, -32.878, 334.553]}
						rotation={[-1.469, 0.096, 3.035]}
						scale={90.85}>
						<mesh


							geometry={nodes.Circle005_Birch_tree_0.geometry}
							material={materials.Birch_tree}
						/>
						<mesh


							geometry={nodes.Circle005_foliage_base_color_0.geometry}
							material={materials.foliage_base_color}
						/>
					</group>
					<group
						position={[90.562, -35.182, 470.127]}
						rotation={[-1.496, 0.063, -1.636]}
						scale={96.626}>
						<mesh


							geometry={nodes.Circle007_Fir_0.geometry}
							material={materials.material}
						/>
						<mesh


							geometry={nodes.Circle007_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-124.574, -21.891, 433.42]}
						rotation={[-1.473, 0.034, 1.102]}
						scale={100.716}>
						<mesh


							geometry={nodes.Circle008_Birch_tree_0.geometry}
							material={materials.Birch_tree}
						/>
						<mesh


							geometry={nodes.Circle008_foliage_base_color_0.geometry}
							material={materials.foliage_base_color}
						/>
					</group>
					<group
						position={[287.156, -27.665, 350.382]}
						rotation={[-1.415, 0.1, -1.203]}
						scale={96.626}>
						<mesh


							geometry={nodes.Circle009_Wood_0.geometry}
							material={materials.Wood}
						/>
						<mesh


							geometry={nodes.Circle009_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[225.768, -11.424, -440.74]}
						rotation={[-1.774, -0.005, -1.085]}
						scale={76.923}>
						<mesh


							geometry={nodes.Circle010_Fir_0.geometry}
							material={materials.material}
						/>
						<mesh


							geometry={nodes.Circle010_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[450.311, -4.6, -264.688]}
						rotation={[-1.597, 0.1, 2.488]}
						scale={100.366}>
						<mesh


							geometry={nodes.Circle011_Birch_tree_0.geometry}
							material={materials.Birch_tree}
						/>
						<mesh


							geometry={nodes.Circle011_foliage_base_color_0.geometry}
							material={materials.foliage_base_color}
						/>
					</group>
					<group
						position={[253.839, 22.324, -336.985]}
						rotation={[-1.685, 0.016, -1.685]}
						scale={96.626}>
						<mesh


							geometry={nodes.Cube_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[184.205, 13.437, -372.95]}
						rotation={[-0.119, 0.85, 1.624]}
						scale={96.626}>
						<mesh


							geometry={nodes.Cube001_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube001_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[379.582, 5.62, -259.556]}
						rotation={[-1.562, 0.046, -1.634]}
						scale={[35.57, 35.57, 11.154]}>
						<mesh


							geometry={nodes.Cube002_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube002_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-70.935, -1.47, 340.749]}
						rotation={[-1.476, -0.051, -1.515]}
						scale={[35.57, 35.57, 11.154]}>
						<mesh


							geometry={nodes.Cube004_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube004_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-160.16, 1.813, 375.201]}
						rotation={[-2.866, 1.198, -1.725]}
						scale={96.626}>
						<mesh


							geometry={nodes.Cube005_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube005_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[265.978, -39.911, 484.461]}
						rotation={[-1.466, 0.063, 2.803]}
						scale={[35.57, 35.57, 11.154]}>
						<mesh


							geometry={nodes.Cube006_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube006_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-19.843, -6.027, -432.619]}
						rotation={[-0.163, -1.28, 1.376]}
						scale={96.626}>
						<mesh


							geometry={nodes.Cube007_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube007_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[421.251, -11.086, 229.196]}
						rotation={[-1.435, 0.117, 0.632]}
						scale={[96.626, 96.627, 96.626]}>
						<mesh


							geometry={nodes.Cube008_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube008_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[455.465, -24.403, 309.853]}
						rotation={[0.134, 0.95, 1.487]}
						scale={96.626}>
						<mesh


							geometry={nodes.Cube021_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube021_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-270.091, 1.813, 76.412]}
						rotation={[-2.866, 1.198, -1.725]}
						scale={96.626}>
						<mesh


							geometry={nodes.Cube022_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube022_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[507.612, -49.377, 365.111]}
						rotation={[-0.001, -0.548, 0.86]}
						scale={[121.527, 188.314, 210.297]}>
						<mesh


							geometry={nodes.Cube023_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube023_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[254.348, -40.654, -559.192]}
						rotation={[-2.013, 0.246, -2.39]}
						scale={[36.501, 45.607, 13.681]}>
						<mesh


							geometry={nodes.Cube024_Stones_0.geometry}
							material={materials.Stones}
						/>
						<mesh


							geometry={nodes.Cube024_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[96.777, 89.964, 92.262]}
						rotation={[-1.572, 0.024, 0.491]}
						scale={[103.563, 49.458, 49.458]}>
						<mesh


							geometry={nodes.Car_Vaz_2107_0.geometry}
							material={materials.Vaz_2107}
						/>
						<mesh


							geometry={nodes.Car_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group
						position={[-191.245, 53.107, -33.332]}
						rotation={[-1.51, -0.028, -0.445]}
						scale={[188.132, 188.132, 150.478]}>
						<mesh


							geometry={nodes.Barbecue_Barbecue_0.geometry}
							material={materials.Barbecue}
						/>
						<mesh


							geometry={nodes.Barbecue_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<group position={[-94.197, 19.249, -145.175]} rotation={[-1.6, 0.03, 2.312]} scale={100}>
						<mesh


							geometry={nodes.Plane_Brick_0.geometry}
							material={materials.Brick}
						/>
						<mesh


							geometry={nodes.Plane_Line__0.geometry}
							material={materials.Line}
						/>
					</group>
					<mesh


						geometry={nodes.Soil_soil_0.geometry}
						material={materials.soil}
						position={[3.144, -25.611, -0.447]}
						rotation={[Math.PI / 2, 0, 2.755]}
						scale={[-639.722, 639.722, 363.86]}
					/>
					<mesh


						geometry={nodes.Cube003_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-100.095, 3.95, -114.911]}
						rotation={[-2.124, 0.473, -0.508]}
						scale={7.4}
					/>
					<mesh


						geometry={nodes.Cube009_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-79.093, 7.237, -131.973]}
						rotation={[-0.7, 1.209, -1.579]}
						scale={7.4}
					/>
					<mesh


						geometry={nodes.Cube010_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-110.914, 3.95, -98.5]}
						rotation={[-0.982, 0.426, -2.459]}
						scale={7.4}
					/>
					<mesh


						geometry={nodes.Cube011_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-90.252, 3.95, -116.877]}
						rotation={[-2.277, -0.095, 0.239]}
						scale={7.4}
					/>
					<mesh


						geometry={nodes.Cube012_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-83.506, 3.084, -147.956]}
						rotation={[2.275, 0.139, 1.746]}
						scale={7.4}
					/>
					<mesh


						geometry={nodes.Cube013_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-125.344, 7.272, -116.533]}
						rotation={[2.438, -0.136, 1.499]}
						scale={7.4}
					/>
					<mesh


						geometry={nodes.Cube014_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-190.269, 59.277, -25.126]}
						rotation={[-2.17, 0.262, -0.289]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Cube015_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-176.255, 59.183, -40.163]}
						rotation={[2.504, 0.747, 1.471]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Cube016_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-195.09, 58.328, -9.309]}
						rotation={[-1.092, 0.515, -2.146]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Cube017_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-177.446, 60.034, -24.866]}
						rotation={[-2.204, -0.324, 0.426]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Cube018_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-190.875, 56.391, -49.816]}
						rotation={[2.326, -0.004, 1.489]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Cube019_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-211.191, 60.632, -20.355]}
						rotation={[2.417, -0.31, 1.257]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Cube020_Vaz_2107_0.geometry}
						material={materials.Vaz_2107}
						position={[-203.743, 55.327, -38.284]}
						rotation={[1.943, 0.663, 2.611]}
						scale={6.235}
					/>
					<mesh


						geometry={nodes.Smoke_albedo_Smoke_albedo_0.geometry}
						material={materials.Smoke_albedo}
						position={[-203.981, 134.278, -34.634]}
						rotation={[-3.086, -1.282, 1.739]}
						scale={119.969}
					/>
					<mesh


						geometry={nodes.Fire_albedo_Fire_albedo_0.geometry}
						material={materials.Fire_albedo}
						position={[-202.704, 103.375, -33.911]}
						rotation={[-2.499, -0.931, -2.642]}
						scale={113.941}
					/>
					<mesh


						geometry={nodes.grass_albedo002_grass_0.geometry}
						material={materials.grass}
						position={[-213.332, 7.677, 421.943]}
						rotation={[0.243, -0.615, 0.096]}
						scale={[68.519, 80.636, 68.519]}
					/>
					<mesh


						geometry={nodes.grass_albedo001_grass_0.geometry}
						material={materials.grass}
						position={[-435.813, -8.805, 121.85]}
						rotation={[0.223, 0.765, 0.085]}
						scale={[68.519, 80.636, 68.519]}
					/>
					<mesh


						geometry={nodes.grass_albedo003_grass_0.geometry}
						material={materials.grass}
						position={[-319.099, 7.528, 187.455]}
						rotation={[-0.016, 0.946, 0.066]}
						scale={[61.59, 72.482, 61.59]}
					/>
					<mesh


						geometry={nodes.grass_albedo004_grass_0.geometry}
						material={materials.grass}
						position={[-19.53, 14.324, -386.467]}
						rotation={[-0.256, -0.352, -0.051]}
						scale={[53.735, 63.238, 53.735]}
					/>
					<mesh


						geometry={nodes.grass_albedo005_grass_0.geometry}
						material={materials.grass}
						position={[-125.809, 17.716, -234.762]}
						rotation={[-0.055, -0.003, -0.05]}
						scale={[57.155, 34.307, 57.142]}
					/>
					<mesh


						geometry={nodes.grass_albedo006_grass_0.geometry}
						material={materials.grass}
						position={[150.661, 22.803, -58.456]}
						rotation={[0.045, 0.203, -0.116]}
						scale={[67.606, 57.752, 68.114]}
					/>
					<mesh


						geometry={nodes.grass_albedo007_grass_0.geometry}
						material={materials.grass}
						position={[128.554, 17.716, -243.309]}
						rotation={[-0.055, -0.003, -0.05]}
						scale={[59.526, 35.731, 59.513]}
					/>
					<mesh


						geometry={nodes.grass_albedo008_grass_0.geometry}
						material={materials.grass}
						position={[176.875, 23.142, -330.962]}
						rotation={[-0.142, 0.013, -0.047]}
						scale={[59.602, 50.56, 59.604]}
					/>
					<mesh


						geometry={nodes.grass_albedo009_grass_0.geometry}
						material={materials.grass}
						position={[181.184, -1.329, -567.773]}
						rotation={[-0.256, -0.352, -0.051]}
						scale={[53.735, 63.238, 53.735]}
					/>
					<mesh


						geometry={nodes.grass_albedo010_grass_0.geometry}
						material={materials.grass}
						position={[455.147, 15.671, -91.056]}
						rotation={[0.026, -0.359, 0.029]}
						scale={[53.735, 63.238, 53.735]}
					/>
					<mesh


						geometry={nodes.grass_albedo011_grass_0.geometry}
						material={materials.grass}
						position={[227.943, -8.14, 351.951]}
						rotation={[0.138, 0.206, -0.069]}
						scale={[57.155, 34.307, 57.142]}
					/>
				</group>
			</group>
		</a.group>
	)
}
